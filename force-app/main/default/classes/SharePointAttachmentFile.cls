//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//
// The supplied json has fields with names that are not valid in apex
// and so can only be parsed with explicitly generated code, this option
// was auto selected for you.

/*
{
    "odata.metadata": "https://heroone.sharepoint.com/sites/FileManagementDEV/_api/$metadata#SP.ApiData.Attachments/@Element",
    "odata.type": "SP.Attachment",
    "odata.id": "https://heroone.sharepoint.com/sites/FileManagementDEV/_api/Web/Lists(guid'6f206235-dcbe-4675-a848-b25899b62061')/Items(191)/AttachmentFiles('Test_file_pd.pdf')",
    "odata.editLink": "Web/Lists(guid'6f206235-dcbe-4675-a848-b25899b62061')/Items(191)/AttachmentFiles('Test_file_pd.pdf')",
    "FileName": "Test_file_pd.pdf",
    "FileNameAsPath": {
        "DecodedUrl": "Test_file_pd.pdf"
    },
    "ServerRelativePath": {
        "DecodedUrl": "/sites/FileManagementDEV/Lists/Files/Attachments/191/Test_file_pd.pdf"
    },
    "ServerRelativeUrl": "/sites/FileManagementDEV/Lists/Files/Attachments/191/Test_file_pd.pdf"
}
*/

public class SharePointAttachmentFile {

	public class FileNameAsPath {
		public String DecodedUrl {get;set;} 

		public FileNameAsPath(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'DecodedUrl') {
							DecodedUrl = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'FileNameAsPath consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public String odata_metadata {get;set;} // in json: odata.metadata
	public String odata_type {get;set;} // in json: odata.type
	public String odata_id {get;set;} // in json: odata.id
	public String odata_editLink {get;set;} // in json: odata.editLink
	public String FileName {get;set;} 
	public FileNameAsPath FileNameAsPath {get;set;} 
	public FileNameAsPath ServerRelativePath {get;set;} 
	public String ServerRelativeUrl {get;set;}

    public static Map<String, String> jsonPropertyByFieldName = new Map<String, String>{
        'odata_metadata' => 'odata.metadata',
        'odata_type' => 'odata.type',
        'odata_id' => 'odata.id',
        'odata_etag' => 'odata.etag'
    };

	public SharePointAttachmentFile(JSONParser parser) {
		while (parser.nextToken() != System.JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
					if (text == 'odata.metadata') {
						odata_metadata = parser.getText();
					} else if (text == 'odata.type') {
						odata_type = parser.getText();
					} else if (text == 'odata.id') {
						odata_id = parser.getText();
					} else if (text == 'odata.editLink') {
						odata_editLink = parser.getText();
					} else if (text == 'FileName') {
						FileName = parser.getText();
					} else if (text == 'FileNameAsPath') {
						FileNameAsPath = new FileNameAsPath(parser);
					} else if (text == 'ServerRelativePath') {
						ServerRelativePath = new FileNameAsPath(parser);
					} else if (text == 'ServerRelativeUrl') {
						ServerRelativeUrl = parser.getText();
					} else {
						System.debug(LoggingLevel.WARN, 'SharePointAttachmentFile consuming unrecognized property: '+text);
						consumeObject(parser);
					}
				}
			}
		}
	}
	
	
	public static SharePointAttachmentFile deserialize(String json) {
		System.JSONParser parser = System.JSON.createParser(json);
		return new SharePointAttachmentFile(parser);
	}
	
	public static void consumeObject(System.JSONParser parser) {
		Integer depth = 0;
		do {
			System.JSONToken curr = parser.getCurrentToken();
			if (curr == System.JSONToken.START_OBJECT || 
				curr == System.JSONToken.START_ARRAY) {
				depth++;
			} else if (curr == System.JSONToken.END_OBJECT ||
				curr == System.JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}

    // private static String sanitize(String JSON) {
    //     String res = JSON;

    //     for (String key: jsonPropertyByFieldName.keySet()) {
    //         res = res.replace(key, jsonPropertyByFieldName.get(key));
    //     }

    //     return res;
    // }

    // public static String serialize(SharePointAttachmentFile item) {
    //     String unsanitizedRes = JSON.serialize(item);
    //     String res = sanitize(unsanitizedRes);

    //     return res;
    // }
}